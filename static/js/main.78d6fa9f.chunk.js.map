{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Tag","props","state","text","color","this","className","Component","Game","toggleAccordion","setState","active","location_images","location","toLowerCase","vendor_images","vendor","data","lastIndex","tests","map","test","issues","issue","src","gpu_vendor","alt","gpu_info","description","fullscreen","windowed","length","onClick","name","tweak","status","App","setQuery","value","query","fetch","then","response","json","games","game","forEach","push","apply","index_id","urlParams","URLSearchParams","window","search","has","get","filtered_data","gamesList","sort","a","b","filter","eachItem","includes","some","item","game_data","type","onChange","e","target","placeholder","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"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","file":"static/js/main.78d6fa9f.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport './App.css';\n\nclass Tag extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      text: props.text\n    }\n  }\n\n  render() {\n    let color = this.state.text === \"Works\" ? \"blue\" : \"\"\n    return (\n      <span className={\"tag \" + color}>{this.state.text}</span>\n    )\n  }\n}\n\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: props.data,\n      active: false\n    }\n  }\n\n  toggleAccordion = () => {\n    this.setState({ active: !this.state.active })\n  }\n\n  location_images = (location) => {\n    switch (location.toLowerCase()) {\n      case \"steam\":\n        return \"assets/steam.svg\";\n      case \"epic games store\":\n        return \"assets/egs.svg\";\n      default:\n        return \"assets/generic.svg\";\n    }\n  }\n\n  vendor_images = (vendor) => {\n    switch (vendor.toLowerCase()) {\n      case \"nvidia\":\n        return \"assets/nvidia.svg\";\n      case \"amd\":\n        return \"assets/amd.svg\";\n      default:\n        return \"assets/generic.svg\"\n    }\n  }\n\n  render() {\n    let lastIndex = 0;\n    const tests = this.state.data.tests.map((test) => {\n      const issues = test.issues.map((issue) => (\n        <span key={lastIndex++} className=\"tag gray\">{issue}</span>\n      ))\n\n      return (\n        <>\n          <div className=\"test_gpu\">\n            <img src={this.vendor_images(test.gpu_vendor)} alt={test.gpu_vendor} />\n            <h4>{test.gpu_vendor} {test.gpu_info}</h4>\n          </div>\n          {test.description ? <p>{test.description}</p> : \"\"}\n          <p>Fullscreen:  <Tag text={test.fullscreen} /></p>\n          <p>Windowed:  <Tag text={test.windowed} /></p>\n          {test.issues.length ? <p>Issues:  {issues}</p> : \"\"}\n        </>\n      )\n    });\n\n    return (\n      <div className={\"game \" + (this.state.active ? \"\" : \"hide_info\")}>\n        <div className=\"game_select\" onClick={() => this.toggleAccordion()}>\n          <div className=\"game_name\">\n            <img src={this.location_images(this.state.data.location)} alt={this.state.data.location} />\n            <p>{this.state.data.name}</p>\n          </div>\n          <div className=\"game_status\">\n            {this.state.data.tweak ? <Tag text=\"Needs tweaks\" /> : \"\"}\n            <Tag text={this.state.data.status} />\n          </div>\n        </div>\n        <div className=\"game_info\">\n          {this.state.data.tweak ? <><p className=\"spaced\">{this.state.data.tweak}</p></> : \"\"}\n          {tests}\n        </div>\n      </div>\n    )\n  };\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: [],\n      query: \"\"\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"games.json\").then((response) => response.json()).then((response) => {\n      let lastIndex = 0\n      const games = response.map(game => {\n        game.status = \"Works\";\n        game.issues = []\n        game.tests.forEach((test) => {\n          if (test.fullscreen !== \"Works\" || test.windowed !== \"Works\" || test.issues.length) {\n            game.status = \"Issues\";\n\n            if (test.fullscreen !== \"Works\")\n              game.issues.push(test.fullscreen)\n            if (test.windowed !== \"Works\")\n              game.issues.push(test.windowed)\n            if (test.issues.length)\n              game.issues.push.apply(game.issues, test.issues)\n            return;\n          }\n        });\n        game.index_id = lastIndex++;\n        return game;\n      })\n\n      let urlParams = new URLSearchParams(window.location.search)\n\n      this.setState({ data: games, query: (urlParams.has(\"search\") ? urlParams.get(\"search\") : \"\") })\n\n\n    })\n  }\n\n  setQuery = (value) => {\n    this.setState({ query: value })\n  }\n\n  render() {\n    let filtered_data = this.state.data\n    filtered_data = filtered_data.sort((a, b) => {\n      return ((a.name.toLowerCase() < b.name.toLowerCase()) ? -1 : 1)\n    }).filter(eachItem => {\n      let query = this.state.query.toLowerCase()\n      return (\n        eachItem.name.toLowerCase().includes(query) ||\n        eachItem.location.toLowerCase().includes(query) ||\n        eachItem.status.toLowerCase().includes(query) ||\n        (eachItem.tweak ? \"needs tweaks\".includes(query) : false) ||\n        eachItem.issues.some((item) => (item.toLowerCase().includes(query)))\n      );\n    });\n\n    const gamesList = filtered_data.map((game_data) => (\n      <Game key={game_data.index_id} data={game_data} />));\n\n    return (\n      <div className=\"App\">\n        <header>\n          <h1>Arcade Compatibility</h1>\n          <p>\n            These are tests done by the community to check whether a game works or not on Arcade.\n            Note that compatibility will vary depending on your hardware, and it's possible that\n            you won't be able to host a game that is said to work here.\n          </p>\n          <input type=\"text\" onChange={(e) => this.setQuery(e.target.value)} placeholder=\"Search for a game, status or store...\" value={this.state.query} />\n        </header>\n        <main>\n          {gamesList}\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}